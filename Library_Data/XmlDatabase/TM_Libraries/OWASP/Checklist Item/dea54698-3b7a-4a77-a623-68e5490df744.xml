<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-661591742" Content_Hash="-1278694099">
  <Metadata>
    <Id>dea54698-3b7a-4a77-a623-68e5490df744</Id>
    <Library_Id>00000000-0000-0000-0000-000000000000</Library_Id>
    <Title>SSL Is Used When Transmitting Credentials</Title>
    <Category>Authentication</Category>
    <Phase>Implementation</Phase>
    <Technology>Java</Technology>
    <Type>Checklist Item</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>What to Check For</h1><p>Ensure that SSL&nbsp;is used when transmitting credentials and never unencrypted connections.</p><h1>Why</h1><p>Using SSL prevents the credentials from being&nbsp;identified or tampered with as they are transmitted over the network.</p><h1>How to Check</h1><ol><li><p><strong>Verify that a dedicated SSL-enabled server is used for the authentication component of your application. </strong>Ensure that your application's authentication component runs on a dedicated subdomain and a server that accepts only HTTPS traffic. Disallowing unencrypted HTTP connections will prevent accidental or malicious unsecured connections. Check that the server uses valid SSLv3 certificates that have been signed by a trusted certification authority. Disallowing lower SSL versions, such as SSLv1 and SSLv2 will ensure that weaker encryption methods can not be exploited by an attacker.<br><br>The following URL should connect and prompt for login credentials:</p><blockquote><pre>https://login.example.com/myapp/login</pre></blockquote><p>An HTTP URL to the same server and component should either be disallowed or redirect to its HTTPS counterpart:</p><blockquote><pre>http://login.example.com/myapp/login</pre></blockquote><p>For more information, consult <a href="http://java.sun.com/j2ee/1.4/docs/tutorial-update2/doc/Security6.html#wp509934">Secure Socket Layer in the J2EE</a></p></li><li><p><strong>Identify forms that send credentials. </strong>Forms are defined by a <strong>&lt;form&gt;</strong> tag in the HTML document, such as the one below:</p><blockquote><pre>&lt;form method="POST" action="https://login.example.com/myapp/login"&gt;</pre></blockquote><p>Forms that include credentials usually, but won't always, include an input field with a <strong>TYPE</strong> attribute set to <strong>password</strong>:</p><blockquote><pre>&lt;input <strong>type</strong>="<strong>password</strong>" name="pass" size=25&gt;</pre></blockquote></li><li><p><strong>Ensure that form data is sent using HTTPS. </strong>Examine the <strong>ACTION</strong> attribute of the <strong>&lt;form&gt;</strong> tag and ensure it posts to an absolute URL path and includes HTTPS in the URL, as shown below: </p><blockquote><pre>&lt;form method="POST" <strong>action</strong>="<strong>https</strong>://login.example.com/myapp/login"&gt;</pre></blockquote></li></ol><h1>Problem Example</h1><p>In the following snippet, the credentials are transmitted over unprotected HTTP. This allows an attacker to easily sniff the traffic and steal the credentials.</p><br><blockquote><pre>&lt;html&gt;<br>  &lt;head&gt;<br>    &lt;title&gt;login form&lt;/title&gt;<br>  &lt;/head&gt;<br>  &lt;body&gt;<br>    &lt;form method="POST" action="http://login.example.com/myapp/login"&gt;<br>    &lt;input type="text" name="user" size=25&gt;&lt;br&gt;<br>    &lt;input type="password" name="pass" size=25&gt;&lt;br&gt;<br>    &lt;input type="submit" name="submit" value="log in"&gt;<br>    &lt;/form&gt;<br>  &lt;/body&gt;<br>&lt;/html&gt;</pre></blockquote><h1>Related Guideline</h1><ul><li><a href="ED6F49C0-E021-459E-AE4F-9116CA8E8073">Guideline: Use SSL When Transmitting Credentials (Java Web Application)</a> </li></ul>]]></Data>
  </Content>
</TeamMentor_Article>