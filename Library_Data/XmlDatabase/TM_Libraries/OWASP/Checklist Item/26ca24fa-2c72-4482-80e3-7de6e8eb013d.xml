<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="1459080490" Content_Hash="-672365727">
  <Metadata>
    <Id>26ca24fa-2c72-4482-80e3-7de6e8eb013d</Id>
    <Library_Id>00000000-0000-0000-0000-000000000000</Library_Id>
    <Title>Communication Links Are Encrypted</Title>
    <Category>Communication Security</Category>
    <Phase>Implementation</Phase>
    <Technology>Java</Technology>
    <Type>Checklist Item</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>What to Check For</h1><p>Ensure that the communication channels are encrypted when interacting with other software across the network.</p><h1>Why</h1><p>Encrypting the communication links allows the application to preserve confidentiality and integrity of the transmitted data.</p><h1>How to Check</h1><p>Use the following steps to ensure that your application's communication links are encrypted:</p><ol><li><p><strong>Identify the connections used for transmitting sensitive data. </strong>Identify the sensitive data that is sent over the network and enumerate&nbsp;the respective connections that are used for such communication.</p></li><li><p><strong>Verify that connections are secured. </strong>Using a network sniffer, verify that your application utilizes either IPSec or TLS/SSL then check the following:</p><ul><li><p><strong>IPSec</strong>:&nbsp;If your application uses IPSec, verify that&nbsp;all packets from your sniffed traffic between the specified hosts contain an Authentication Header (AH) and Encapsulating Security Payload (ESP) fields after the IP headers.</p></li><li><p><strong>TLS/SSL</strong>:&nbsp;If your application uses TLS/SSL, verify that&nbsp;your sniffed traffic between the specified hosts contains an SSL handshake. Keep in mind the following considerations when verifying your application's use of SSL:</p><ul><li><p><strong>Certificate Validity</strong>: Verify that your application's SSL certificate has not reached its expiration date. </p></li><li><p><strong>Certificate Version</strong>: Verify that your application uses SSL version 3.0 certificate.</p></li><li><p><strong>Domain Name</strong>: Verify that the domain name for your application's administrative interface is the same as the domain name listed in the SSL certificate.</p></li><li><p><strong>Chain of Trust</strong>: Verify that your application's users can verify your application's SSL certificate based on the root certificates that are stored in their browsers. If your application uses self-signed SSL certificates, ensure that your organization's root certificate is securely imported into the users' browsers.</p></li><li><p><strong>Server Configuration</strong>: Verify that your application's environment has enabled HTTPS. Verify that transactions of sensitive nature are transmitted only over HTTPS connections. Check if your application's deployment descriptor (e.g. web.xml) has the <strong>transport-guarantee</strong> element set to <strong>CONFIDENTIAL</strong>:</p><blockquote><pre>&lt;security-constraint&gt;<br>  &lt;web-resource-collection&gt;<br>    &lt;web-resource-name&gt;AcctManager&lt;/web-resource-name&gt;<br>    &lt;url-pattern&gt;/acctmanager/*&lt;/url-pattern&gt;<br>    &lt;http-method&gt;GET&lt;/http-method&gt;<br>    &lt;http-method&gt;POST&lt;/http-method&gt;<br>  &lt;/web-resource-collection&gt;<br>  &lt;user-data-constraint&gt;<br>    &lt;transport-guarantee&gt;<strong>CONFIDENTIAL</strong>&lt;/transport-guarantee&gt;<br>  &lt;/user-data-constraint&gt;<br>  &lt;auth-constraint&gt;<br>    &lt;role-name&gt;manager&lt;/role-name&gt;<br>  &lt;/auth-constraint&gt;<br>&lt;/security-constraint&gt;</pre></blockquote></li></ul></li></ul></li></ol><h1>Problem Example</h1><p>The following code establishes a connection between&nbsp;two servers. Unfortunately, the communication is not encrypted; therefore, it is possible for an attacker to eavesdrop on the connection.</p><br><blockquote><pre>String remoteHost = "server02.example.com";<br>int remotePort = "1337";<br>Socket sock = new Socket(remoteHost, remotePort);<br>InputStreamReader isr = new InputStreamReader(sock.getInputStream());<br>BufferedReader input = new BufferedReader(isr);<br>PrintWriter output = new PrintWriter(sock.getOutputStream(), true);</pre></blockquote><h1>Related Guideline</h1><ul><li><a href="5E283FD0-1A55-4DC3-971D-BF7C3318E7CB">Guideline: Encrypt Communication Links (Java Web Application)</a> </li></ul>]]></Data>
  </Content>
</TeamMentor_Article>