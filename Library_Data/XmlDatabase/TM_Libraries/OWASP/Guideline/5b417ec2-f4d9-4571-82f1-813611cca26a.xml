<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-757548618" Content_Hash="-496198970">
  <Metadata>
    <Id>5b417ec2-f4d9-4571-82f1-813611cca26a</Id>
    <Library_Id>00000000-0000-0000-0000-000000000000</Library_Id>
    <Title>Protect Sensitive Data Over the Wire</Title>
    <Category>Sensitive Data</Category>
    <Phase>Implementation</Phase>
    <Technology>ASP.NET 3.5</Technology>
    <Type>Guideline</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>What to Do</h1><p>Consider where items of sensitive data, such as credentials and application-specific data, are transmitted over a network link. Use a protocol that boasts adequate/strong encryption to protect said data. </p><h1>Why</h1><p>The internet is full of abstractions and layers. When data is sent over a wire, it typically passes through several intermediate relays on it's way towards&nbsp;some final destination. Using a safe protocol to transmit information is important because it adds protection against inadvertent eavesdropping and modification in mid transport. </p><h1>When</h1><p>This is appropriate whenever sensitive data needs to be sent between two hosts, whether it is using the public internet or a private LAN as a transmission medium. </p><h1>How</h1><p>If you need to send sensitive data between the Web server and browser, consider using SSL. If you need to protect server-to-server communication, such as between your Web server and database, consider IPSec or SSL.&nbsp;&nbsp;</p><h1>Related Items</h1><ul><li><a href="a11d8cb9-767c-4307-8a53-4d0f61cc12fa">Sensitive Data is Not Stored in Cookies, Hidden Form Fields, or Query Strings</a></li></ul><hr><p>Adapted from Microsoft patterns &amp; practices guidance. </p>]]></Data>
  </Content>
</TeamMentor_Article>