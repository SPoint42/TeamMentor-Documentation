<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="-640324470" Content_Hash="1912789920">
  <Metadata>
    <Id>1e86ab18-716e-4761-b3f9-6ababeee2511</Id>
    <Library_Id>00000000-0000-0000-0000-000000000000</Library_Id>
    <Title>Specify Hashed Password Format in Provider Configuration</Title>
    <Category>Authentication</Category>
    <Phase>Implementation</Phase>
    <Technology>ASP.NET 3.5</Technology>
    <Type>Guideline</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>What to Do</h1><p>Specify a hashed password format in the configuration for you membership provider. </p><h1>Why</h1><p>By storing your password with hashes and salt, you help prevent an attacker that gains access to your user store from obtaining the user passwords.&nbsp; If you use encryption, you have the added problem of securing the encryption key; hashes are not reversible and have no key to be compromised.&nbsp; If your credential store is compromised, the salt value helps to slow an attacker who is attempting to perform a dictionary attack.&nbsp; This gives you additional time to detect and react to the compromise. </p><h1>When</h1><p>All systems which use membership providers should use a hashed password format. </p><h1>How</h1><p>Do not store user passwords either in plaintext or encrypted format.&nbsp; Instead, store password hashes with salt.&nbsp; Use one of the membership providers to help protect credentials in storage and where possible, specify a hashed password format on your provider configuration.</p><br><hr><p>Adapted from Microsoft patterns &amp; practices guidance. </p>]]></Data>
  </Content>
</TeamMentor_Article>