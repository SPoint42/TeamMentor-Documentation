<?xml version="1.0"?>
<TeamMentor_Article Metadata_Hash="1115049748" Content_Hash="-165647311">
  <Metadata>
    <Id>22701ae6-1207-4e89-b62c-537bd112fb84</Id>
    <Library_Id>00000000-0000-0000-0000-000000000000</Library_Id>
    <Title>Disable Directory Browsing</Title>
    <Category>Deployment Considerations</Category>
    <Phase>Deployment</Phase>
    <Technology>Java</Technology>
    <Type>Guideline</Type>
    <DirectLink />
    <Tag />
    <Security_Demand />
    <Author />
    <Priority>2</Priority>
    <Status />
  </Metadata>
  <Content Sanitized="true" DataType="Html">
    <Data><![CDATA[<h1>Applies to</h1><p>Applications written using Servlets or JSP.</p><h1>What to Do</h1><p>Disable directory browsing for your application's web directories.</p><h1>Why</h1><p>Directory browsing allows an attacker to browse your application's directory structure in search of unprotected files and components.</p><h1>When</h1><p>Disable directory browsing at all times.</p><h1>How</h1><p>Use the following steps to successfully disable directory browsing:</p><ol><li><p><strong>Identify if directory browsing is enabled. </strong>Navigate to your application's directories. Identify&nbsp;whether your application's server correctly returns an HTTP error message. If it incorrectly returns&nbsp;the directory contents, continue with the following steps.</p></li><li><p><strong>Locate the default servlet's configuration. </strong>Open your application's deployment descriptor (e.g. web.xml), and locate the default servlet's configuration. If the default servlet is present, it is mapped to the root directory of your application. Example: </p><blockquote><pre>&lt;servlet&gt;<br>      &lt;servlet-name&gt;default_servlet&lt;/servlet-name&gt;<br>      &lt;servlet-class&gt;<br>            org.apache.catalina.servlets.DefaultServlet<br>      &lt;/servlet-class&gt;<br>&lt;/servlet&gt;<br>&lt;servlet-mapping&gt;<br>      &lt;servlet-name&gt;default_servlet&lt;/servlet-name&gt;<br>      &lt;url-pattern&gt;/&lt;/url-pattern&gt;<br>&lt;/servlet-mapping&gt;</pre></blockquote></li><li><p><strong>Deny directory browsing in the default servlet's configuration. </strong>Initialize the default servlet with the parameter <strong>listings</strong> set to <strong>false</strong>. Example:</p><blockquote><pre>&lt;servlet&gt;<br>      &lt;servlet-name&gt;default_servlet&lt;/servlet-name&gt;<br>      &lt;servlet-class&gt;<br>            org.apache.catalina.servlets.DefaultServlet<br>      &lt;/servlet-class&gt;<br>      <strong>&lt;init-param&gt;<br></strong>            &lt;param-name&gt;listings&lt;/param-name&gt;<br>            &lt;param-value&gt;false&lt;/param-value&gt;<br><strong>      &lt;/init-param&gt;<br></strong>&lt;/servlet&gt;<br>&lt;servlet-mapping&gt;<br>      &lt;servlet-name&gt;default_servlet&lt;/servlet-name&gt;<br>      &lt;url-pattern&gt;/&lt;/url-pattern&gt;<br>&lt;/servlet-mapping&gt;</pre></blockquote></li></ol><h1>Problem Example</h1><p>An application is deployed on a production server. Unfortunately, the developers did not disable directory browsing. This allows an attacker to search for unprotected configuration files.</p><h1>Solution Example</h1><p>An application is deployed on a production server. Because the developers have disabled directory browsing, it is impossible for an attacker to use HTTP browsing to search for unprotected configuration files.</p><h1>Related Items</h1><ul><li><a href="E99B2092-A623-447A-8461-1FD8F860AA15">Guideline: Remove Test Interfaces (Java Web Application)</a> </li><li><a href="4572037A-2166-4AD1-8E73-D623E468A7B9">Attack: Information Disclosure Attack</a> </li><li><a href="1D7F6072-1A5F-472E-9D27-F15E396EAB2E">Attack: Forceful Browsing Attack</a> </li><li><a href="1398DA02-651D-4798-95C3-7C3F8409004B">Checklist Item: Directory Browsing is Disabled (Java Web Application)</a> </li></ul>]]></Data>
  </Content>
</TeamMentor_Article>